import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';
import axios from 'axios';

// Define initial state for product details
const initialState = {
  product: null,
  status: 'idle', // or 'loading', 'succeeded', 'failed'
  error: null,
};

// Async action to fetch product details from API
export const fetchProductDetails = createAsyncThunk(
  'productDetails/fetchProductDetails',
  async (productId) => {
    try {
      const {data} = await axios.get(`/api/v1/product/${productId}`);
      return data;
    } catch (error) {
      const {data} = await axios.get(`/api/v1/product/${productId}`);
      throw error;
    }
  }
);

// Create productDetailsSlice with reducers and async actions
const productDetailsSlice = createSlice({
  name: 'productDetails',
  initialState,
  reducers: {},
  extraReducers: (builder) => {
    builder
      .addCase(fetchProductDetails.pending, (state) => {
        state.status = 'loading';
      })
      .addCase(fetchProductDetails.fulfilled, (state, action) => {
        state.status = 'succeeded';
        state.product = action.payload.product;
      })
      .addCase(fetchProductDetails.rejected, (state, action) => {
        state.status = 'failed';
        state.error = action.error.message;
      });
  },
});

// Export the reducer function generated by createSlice
export default productDetailsSlice.reducer;
